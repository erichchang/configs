#
#
#
# reload tmux config without affecting the sessions or windows within them.
# tmux source-file ~/.tmux.conf
# Or in tmux :source-file ~/.tmux.conf

# -----------------------------------------------------------------------------
# General Options
# -----------------------------------------------------------------------------

# #####= Setup BIND-KEY =#####
# Set new default prefix (C-a) to act like GNU screen
unbind-key C-b
set -g prefix C-a

# Nested Tmux Session
# send to tmux session within another tmux session; like screen
bind-key a send-prefix
# bind-key C-a send-prefix

# Allow swapping C-a and ` using F11/F12
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `

# Force reload of config file
# === Set reload key to r ===
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Configuration reloaded"

# Scrollback/History limit
set -g history-limit 100000

# start session window numbers at 1 to match tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Enable UTF-8
# set LANG="en_US.UTF-8"
# set -g utf8 on
#set -g status-utf8 on
#set-window-option -g utf8 on

# === Enable XTERM-like and Mouse scroll ===
set -g xterm-keys on
set -g default-terminal "xterm-256color"

# Sane scrolling : xterm style
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@"

# === toggle status bar ===
set -g status on

bind-key b set-option status
set -g status-interval 5
# '#S' is session name, '#I' is window index, '#P' is pane index
set -g status-right '[#h###S:#I:#P]'

set-window-option -g automatic-rename on
# fix delay time between tmux & vim
set -s escape-time 0


### Theme
###########################################################################
# Statusbar Color Palatte
set -g status-justify left
set -g status-bg black
set -g status-fg white
set -g status-left-length 40
set -g status-right-length 80

# Pane Border Color Palette
# set -g pane-active-border-fg green
# set -g pane-active-border-bg black
# set -g pane-border-fg white
# set -g pane-border-bg black

# Message Color Palette
# set -g message-fg black
# set -g message-bg green

# Window Status Color Palette
# setw -g window-status-bg black
# setw -g window-status-current-fg green
# setw -g window-status-current-attr bold
# setw -g window-status-current-bg red
#setw -g window-status-content-attr default
#setw -g window-status-content-fg yellow
#setw -g window-status-activity-attr default
#setw -g window-status-activity-fg yellow
#setw -g window-status-bell-attr default
#setw -g window-status-bell-fg red

setw -g aggressive-resize on

### UI
###########################################################################

# Notification
setw -g monitor-activity on
set -g visual-activity on
set -g bell-action any
set -g visual-bell off

# Automatically set window titles
set -g set-titles on
# window number,program name,active (or not)
set -g set-titles-string '#H:#S.#I.#P #W #T'
#set -g set-titles-string '#S'
#set -g set-titles-string '#(whoami) :: #h :: #(curl ipecho.net/plain;echo)'

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# edit config
bind-key e new-window -n 'conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# Return to las window when prefix is pressed twice
# bind-key C-\ last-window
# switch to last pane
# bind-key C-a last-pane

# copy to a tmp file in case buffer too big
bind-key p command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -JS -32768 ; save-buffer %1 ; delete-buffer'
bind-key -n C-f copy-mode \; send-key ?

# pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Keybind preference
# act like vim
setw -g mode-keys vi
set -g status-keys vi
# Moving between panes# act like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

#setw -g mode-keys emacs
#set -g status-keys emacs

# emacs and emacsclient
# from http://perlstalker.vuser.org/blog/2012/10/16/emacsclient-and-tmux/
#
bind-key y   new-window -n "emacs"  "emacsclient -nw"
bind-key C-y split-window -h "emacsclient -nw"
bind-key g   new-window -n "gnus" "emacsclient -nw --eval '(gnus)'"
bind-key C-g split-window "emacsclient -nw --eval '(gnus)'"
bind-key W   new-window -n "w3m" "emacsclient -nw --eval '(w3m)'"
bind-key C-w split-window "emacsclient -nw --eval '(w3m)'"

# Window Cycle/Swap
#bind-key e previous-window
bind-key f next-window
bind-key E swap-window -t -1
bind-key F swap-window -t +1

# Easy split pane commands
bind-key | split-window -h
bind-key - split-window -v

# === quickly and easily ssh into servers ===
bind-key S   command-prompt -p "host" "split-window 'ssh %1'"
bind-key C-s command-prompt -p "host" "new-window -n %1 'ssh %1'"
#  open man pages in a new pane 
# bind-key C-m command-prompt -p "man" "split-window 'exec man %%'"

# unbind-key %

# === mouse toggle ===
# set -g mode-mouse on
bind-key M-m setw -g mode-mouse on
bind-key M-M setw -g mode-mouse off
bind-key M-p set-option -g mouse-select-pane on
bind-key M-P set-option -g mouse-select-pane off

# === tmux plugin manager ===
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'macchiato' # or frappe, macchiato, mocha
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator "  █"

set -g @catppuccin_window_default_fill "number"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{pane_current_path}"

set -g @catppuccin_status_modules_right "application session date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"
set -g status-position top

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
